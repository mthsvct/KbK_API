"""remocao das tabelas contato e pessoa

Revision ID: ec75691e99a7
Revises: 5a25b153f894
Create Date: 2024-05-19 12:55:26.162784

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ec75691e99a7'
down_revision: Union[str, None] = '5a25b153f894'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remover as restrições de chave estrangeira que dependem das tabelas contato e pessoa
    op.drop_constraint('fk_salao_contato', 'salao', type_='foreignkey')
    op.drop_constraint('fk_cliente_pessoa', 'cliente', type_='foreignkey')
    op.drop_constraint('fk_funcionario_pessoa', 'funcionario', type_='foreignkey')

    # Excluir as tabelas contato e pessoa usando CASCADE
    op.execute('DROP TABLE IF EXISTS contato CASCADE')
    op.execute('DROP TABLE IF EXISTS pessoa CASCADE')

    # Adicionar novas colunas à tabela cliente
    op.add_column('cliente', sa.Column('nome', sa.String(), nullable=True))
    op.add_column('cliente', sa.Column('dataNascimento', sa.DateTime(), nullable=True))
    op.add_column('cliente', sa.Column('telefone', sa.String(), nullable=True))
    op.add_column('cliente', sa.Column('email', sa.String(), nullable=True))
    op.add_column('cliente', sa.Column('instagram', sa.String(), nullable=True))
    op.add_column('cliente', sa.Column('endereco_id', sa.Integer(), nullable=True))
    
    # Adicionar nova restrição de chave estrangeira à tabela cliente
    op.create_foreign_key('fk_cliente_endereco', 'cliente', 'endereco', ['endereco_id'], ['id'])
    
    # Excluir a coluna pessoa_id da tabela cliente
    op.drop_column('cliente', 'pessoa_id')

    # Adicionar novas colunas à tabela funcionario
    op.add_column('funcionario', sa.Column('nome', sa.String(), nullable=True))
    op.add_column('funcionario', sa.Column('dataNascimento', sa.DateTime(), nullable=True))
    op.add_column('funcionario', sa.Column('telefone', sa.String(), nullable=True))
    op.add_column('funcionario', sa.Column('email', sa.String(), nullable=True))
    op.add_column('funcionario', sa.Column('instagram', sa.String(), nullable=True))
    op.add_column('funcionario', sa.Column('endereco_id', sa.Integer(), nullable=True))
    
    # Adicionar nova restrição de chave estrangeira à tabela funcionario
    op.create_foreign_key('fk_funcionario_endereco', 'funcionario', 'endereco', ['endereco_id'], ['id'])
    
    # Excluir a coluna pessoa_id da tabela funcionario
    op.drop_column('funcionario', 'pessoa_id')

    # Adicionar novas colunas à tabela salao
    op.add_column('salao', sa.Column('telefone', sa.String(), nullable=True))
    op.add_column('salao', sa.Column('email', sa.String(), nullable=True))
    op.add_column('salao', sa.Column('instagram', sa.String(), nullable=True))
    
    # Excluir a coluna contato_id da tabela salao
    op.drop_column('salao', 'contato_id')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('salao', sa.Column('contato_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_salao_contato', 'salao', 'contato', ['contato_id'], ['id'])
    op.drop_column('salao', 'instagram')
    op.drop_column('salao', 'email')
    op.drop_column('salao', 'telefone')
    op.add_column('funcionario', sa.Column('pessoa_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('fk_funcionario_endereco', 'funcionario', type_='foreignkey')
    op.create_foreign_key('fk_funcionario_pessoa', 'funcionario', 'pessoa', ['pessoa_id'], ['id'])
    op.drop_column('funcionario', 'endereco_id')
    op.drop_column('funcionario', 'instagram')
    op.drop_column('funcionario', 'email')
    op.drop_column('funcionario', 'telefone')
    op.drop_column('funcionario', 'dataNascimento')
    op.drop_column('funcionario', 'nome')
    op.add_column('cliente', sa.Column('pessoa_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('fk_cliente_endereco', 'cliente', type_='foreignkey')
    op.create_foreign_key('fk_cliente_pessoa', 'cliente', 'pessoa', ['pessoa_id'], ['id'])
    op.drop_column('cliente', 'endereco_id')
    op.drop_column('cliente', 'instagram')
    op.drop_column('cliente', 'email')
    op.drop_column('cliente', 'telefone')
    op.drop_column('cliente', 'dataNascimento')
    op.drop_column('cliente', 'nome')
    op.create_table('pessoa',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dataNascimento', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('contato_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('endereco_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contato_id'], ['contato.id'], name='fk_pessoa_contato'),
    sa.ForeignKeyConstraint(['endereco_id'], ['endereco.id'], name='fk_pessoa_endereco'),
    sa.PrimaryKeyConstraint('id', name='pessoa_pkey')
    )
    op.create_index('ix_pessoa_id', 'pessoa', ['id'], unique=False)
    op.create_table('contato',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('instagram', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='contato_pkey')
    )
    op.create_index('ix_contato_id', 'contato', ['id'], unique=False)
    # ### end Alembic commands ###